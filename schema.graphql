# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

type Query {
	viewer: Viewer

  # Fetches an object given its ID
  node(
    # The ID of an object
    id: ID!
  ): Node
}

# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String

  # When paginating forwards, the cursor to continue.
  endCursor: String
}
type Chapter implements Node {
  id: ID!
  text: String
}

type Book implements Node {
  id: ID!
  title: String
  chapters: [Chapter]
}

type Viewer {
  book: Book,
  chapter: Chapter,
  books: [Book]
}